name: Terraform Build and Validation

on:
  push:
    branches:
      - dev
      - uat
      - prod

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set ENV Based on Branch
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "ENV=dev" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/uat" ]]; then
            echo "ENV=uat" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/prod" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
          fi

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Auto-Fix Terraform Formatting
        run: |
          echo "Running terraform fmt to auto-fix formatting..."
          terraform fmt -recursive

      - name: Terraform Init
        run: |
          if [ ! -f envs/${{ env.ENV }}/backend-${{ env.ENV }}.tfbackend ]; then
            echo "Backend file not found!"
            exit 1
          fi
          terraform init -backend-config=envs/${{ env.ENV }}/backend-${{ env.ENV }}.tfbackend

      - name: Terraform Validate (Check All Issues)
        run: |
          echo "Validating all Terraform modules..."
          terraform validate -no-color || exit 1

      - name: Terraform Plan
        run: |
          terraform plan -var-file="envs/${{ env.ENV }}/${{ env.ENV }}.tfvars" -out=tfplan

      - name: Store Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan
