name: Destroy Infrastructure

on:
  workflow_dispatch: # Manual trigger

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      # ✅ Replace this with a GitHub API-based artifact download
      - name: Download Terraform Plan Artifact
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RUN_ID=${{ github.event.workflow_run.id }}
          ARTIFACT_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs/$RUN_ID/artifacts"
          
          echo "Fetching artifacts from: $ARTIFACT_URL"
          
          # Get artifact download URL
          DOWNLOAD_URL=$(curl -s -H "Authorization: token $GH_TOKEN" -H "Accept: application/vnd.github.v3+json" "$ARTIFACT_URL" | jq -r '.artifacts[] | select(.name=="terraform-plan") | .archive_download_url')

          if [[ -z "$DOWNLOAD_URL" || "$DOWNLOAD_URL" == "null" ]]; then
            echo "❌ Terraform Plan artifact not found!"
            exit 1
          fi

          # Download the artifact
          curl -s -L -H "Authorization: token $GH_TOKEN" -o terraform-plan.zip "$DOWNLOAD_URL"
          unzip terraform-plan.zip -d .
          rm terraform-plan.zip
          
      - name: Set ENV Based on Branch
        run: |
          BRANCH=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
          echo "ENV=$BRANCH" >> $GITHUB_ENV

      - name: Log in to Azure with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          BACKEND_FILE="envs/${{ env.ENV }}/backend-${{ env.ENV }}.tfbackend"
          if [ ! -f "$BACKEND_FILE" ]; then
            echo "Backend file not found!"
            exit 1
          fi
          terraform init -backend-config="$BACKEND_FILE"

      - name: Confirm Before Destroy
        run: |
          echo "⚠️ Are you sure you want to destroy the infrastructure in ${{ env.ENV }}?"
          echo "To continue, set 'DESTROY_CONFIRM=true' in GitHub Actions Secrets."
          if [[ "${{ secrets.DESTROY_CONFIRM }}" != "true" ]]; then
            echo "❌ Destroy confirmation not provided. Aborting!"
            exit 1
          fi
          echo "✅ Confirmation received. Proceeding with destroy."

      - name: Terraform Destroy
        run: |
          terraform destroy -var-file="envs/${{ env.ENV }}/${{ env.ENV }}.tfvars" -auto-approve
