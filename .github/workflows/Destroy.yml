name: Destroy Infrastructure

on:
  workflow_dispatch: # Manual trigger

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      - name: Check Last Build Status
        run: |
          echo "Checking last build status..."
          LAST_BUILD_STATUS=$(gh run list --workflow "Validate and Plan Terraform" --branch "${{ github.ref_name }}" --json conclusion --jq '.[0].conclusion')
          if [[ "$LAST_BUILD_STATUS" != "success" ]]; then
            echo "❌ Last build was not successful. Destroy aborted!"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set ENV Based on Branch
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "ENV=dev" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/uat" ]]; then
            echo "ENV=uat" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/prod" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
          fi

      - name: Log in to Azure with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          BACKEND_FILE="envs/${{ env.ENV }}/backend-${{ env.ENV }}.tfbackend"
          if [ ! -f "$BACKEND_FILE" ]; then
            echo "Backend file not found!"
            exit 1
          fi
          terraform init -backend-config="$BACKEND_FILE"

      - name: Confirm Before Destroy
        run: |
          echo "⚠️ Are you sure you want to destroy the infrastructure in ${{ env.ENV }}?"
          echo "To continue, set 'DESTROY_CONFIRM=true' in GitHub Actions Secrets."
          if [[ "${{ secrets.DESTROY_CONFIRM }}" != "true" ]]; then
            echo "❌ Destroy confirmation not provided. Aborting!"
            exit 1
          fi
          echo "✅ Confirmation received. Proceeding with destroy."

      - name: Terraform Destroy
        run: |
          terraform destroy -var-file="envs/${{ env.ENV }}/${{ env.ENV }}.tfvars" -auto-approve
