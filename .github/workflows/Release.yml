name: Release to ACI

on:
  workflow_run:
    workflows: ["Validate and Plan Terraform"]  # ðŸ”¹ Ensure this matches your build workflow!
    types:
      - completed

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'

    steps:
      - name: Get Branch Name from Workflow Run
        id: get_branch
        run: |
          BRANCH=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }} \
            | jq -r '.head_branch')

          echo "Branch detected: $BRANCH"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Extract Environment Based on Branch
        run: |
          if [[ "${{ env.BRANCH }}" == "dev" ]]; then
            echo "ENV=dev" >> $GITHUB_ENV
          elif [[ "${{ env.BRANCH }}" == "uat" ]]; then
            echo "ENV=uat" >> $GITHUB_ENV
          elif [[ "${{ env.BRANCH }}" == "prod" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
          else
            echo "Unknown branch: ${{ env.BRANCH }}"
            exit 1
          fi

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan

      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Log in to Azure with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          BACKEND_FILE="envs/${{ env.ENV }}/backend-${{ env.ENV }}.tfbackend"
          if [ ! -f "$BACKEND_FILE" ]; then
            echo "Backend file not found!"
            exit 1
          fi
          terraform init -backend-config="$BACKEND_FILE"

      - name: Deploy to Azure Container Instance
        run: |
          terraform apply -var-file="envs/${{ env.ENV }}/${{ env.ENV }}.tfvars" -auto-approve
