name: Deploy Terraform

on:
  workflow_run:
    workflows: ["Validate and Plan Terraform"]  # This matches the build.yml workflow name
    types:
      - completed

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # Ensure it runs only if build.yml succeeds

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set ENV Based on Branch
        run: |
          if [[ "${{ github.event.workflow_run.head_branch }}" == "dev" ]]; then
            echo "ENV=dev" >> $GITHUB_ENV
          elif [[ "${{ github.event.workflow_run.head_branch }}" == "uat" ]]; then
            echo "ENV=uat" >> $GITHUB_ENV
          elif [[ "${{ github.event.workflow_run.head_branch }}" == "prod" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
          fi

      - name: Log in to Azure with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Print Terraform Version
        run: terraform version

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan

      - name: Terraform Init with OIDC Authentication
        env:
          ARM_USE_OIDC: true
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        run: |
          BACKEND_FILE="envs/${{ env.ENV }}/backend-${{ env.ENV }}.tfbackend"
          if [ ! -f "$BACKEND_FILE" ]; then
            echo "Backend config file not found: $BACKEND_FILE"
            exit 1
          fi
          terraform init -backend-config="$BACKEND_FILE"

      - name: Apply Terraform Plan
        env:
          ARM_USE_OIDC: true
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        run: |
          echo "Applying Terraform Plan..."
          terraform apply -auto-approve tfplan
          echo "âœ… Terraform Apply Completed Successfully"