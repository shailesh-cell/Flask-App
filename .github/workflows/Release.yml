name: Deploy Terraform

on:
  workflow_run:
    workflows: ["Validate and Plan Terraform"]
    types:
      - completed

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set ENV Based on Branch
        run: |
          BRANCH=$(echo "${{ github.event.workflow_run.head_commit.ref }}" | sed 's|refs/heads/||')
          echo "ENV=$BRANCH" >> $GITHUB_ENV

      - name: Log in to Azure with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Download Terraform Plan Artifact
        run: |
          RUN_ID=${{ github.event.workflow_run.id }}
          ARTIFACT_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs/$RUN_ID/artifacts"
          ARTIFACT_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $ARTIFACT_URL | jq -r '.artifacts[] | select(.name | startswith("terraform-plan-")) | .id')
          if [ -z "$ARTIFACT_ID" ]; then
            echo "‚ùå No Terraform plan artifact found!"
            exit 1
          fi
          curl -s -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o artifact.zip "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip"
          unzip artifact.zip
          ls -lh tfplan

      - name: Terraform Init
        env:
          ARM_USE_OIDC: true
        run: |
          BACKEND_FILE="envs/${{ env.ENV }}/backend-${{ env.ENV }}.tfbackend"
          terraform init -backend-config="$BACKEND_FILE"

      - name: Apply Terraform Plan
        run: |
          terraform apply -auto-approve tfplan